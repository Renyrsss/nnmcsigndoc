{
  "version": 3,
  "sources": ["../../../@strapi/admin/ee/admin/src/services/ai.ts"],
  "sourcesContent": ["import { adminApi } from '../../../../admin/src/services/api';\nimport { GetAiUsage, GetAiToken } from '../../../../shared/contracts/ai';\n\nconst aiService = adminApi.injectEndpoints({\n  endpoints: (builder) => ({\n    getAIUsage: builder.query<GetAiUsage.Response, void>({\n      query: () => ({\n        method: 'GET',\n        url: `/admin/ai-usage`,\n      }),\n    }),\n    getAiToken: builder.query<GetAiToken.Response['data'], void>({\n      query: () => ({\n        method: 'GET',\n        url: '/admin/ai-token',\n      }),\n      transformResponse(res: GetAiToken.Response) {\n        return res.data;\n      },\n    }),\n  }),\n  overrideExisting: false,\n});\n\nconst { useGetAIUsageQuery, useGetAiTokenQuery, useLazyGetAiTokenQuery } = aiService;\n\nexport { useGetAIUsageQuery, useGetAiTokenQuery, useLazyGetAiTokenQuery };\n"],
  "mappings": ";;;;;AAGA,IAAMA,YAAYC,SAASC,gBAAgB;EACzCC,WAAW,CAACC,aAAa;IACvBC,YAAYD,QAAQE,MAAiC;MACnDA,OAAO,OAAO;QACZC,QAAQ;QACRC,KAAK;;IAET,CAAA;IACAC,YAAYL,QAAQE,MAAyC;MAC3DA,OAAO,OAAO;QACZC,QAAQ;QACRC,KAAK;;MAEPE,kBAAkBC,KAAwB;AACxC,eAAOA,IAAIC;MACb;IACF,CAAA;;EAEFC,kBAAkB;AACpB,CAAA;AAEA,IAAM,EAAEC,oBAAoBC,oBAAoBC,uBAAsB,IAAKhB;",
  "names": ["aiService", "adminApi", "injectEndpoints", "endpoints", "builder", "getAIUsage", "query", "method", "url", "getAiToken", "transformResponse", "res", "data", "overrideExisting", "useGetAIUsageQuery", "useGetAiTokenQuery", "useLazyGetAiTokenQuery"]
}
